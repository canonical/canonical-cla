name: Pack Rock image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/workflows/*.yaml"
env:
  ROCKCRAFT_JSON: rockcraft.json
  CHARMED_REPO: canonical/charmed-canonical-cla

jobs:
  test:
    name: Test project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Run tests
        run: pytest --cov-report xml:coverage.xml

      - name: Show coverage
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Pack Rock image
    runs-on: ubuntu-latest
    needs: test
    outputs:
      rock: ${{ steps.rockcraft.outputs.rock }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Rockcraft version
        run: |
          ROCKCRAFT_VERSION=$(snap info rockcraft | sed -n 's/^\s*latest\/stable:\s*\([0-9.]*\).*/\1/p')
          echo "rockcraft_version=$ROCKCRAFT_VERSION" >> $GITHUB_OUTPUT
        id: rockcraft_version

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: |
            ./rockcraft_*.snap
            ./rockcraft_*.assert
          key: rockcraft-${{ steps.rockcraft_version.outputs.rockcraft_version }}

      - name: Setup Rockcraft ${{ steps.rockcraft_version.outputs.rockcraft_version }}
        run: |
          snap download rockcraft --channel=latest/stable
          sudo snap ack rockcraft_*.assert
          sudo snap install --classic rockcraft_*.snap

      - name: Prepare requirements.txt
        run: |
          pip install poetry==1.8.3
          poetry export --output requirements.txt --no-interaction

      - name: Pack Rock
        id: rockcraft
        run: |
          sudo rockcraft pack --destructive-mode -v 2>&1 | tee rockcraft.log
          ROCK_IMAGE=$(cat rockcraft.log | sed -nE "s/Exported to OCI archive '(.*)'/\1/p")
          [ -z "$ROCK_IMAGE" ] && exit 1       
          echo "rock=$ROCK_IMAGE" >> $GITHUB_OUTPUT

      - name: Upload Rock artifact
        uses: actions/upload-artifact@v4
        with:
          name: rock-image
          path: ${{ steps.rockcraft.outputs.rock }}

      - name: Set image URL
        id: image_url
        run: |
          IMAGE_URL=ghcr.io/canonical/canonical-cla:$(date +%s)-${GITHUB_SHA:0:7}
          echo "url=$IMAGE_URL" >> $GITHUB_OUTPUT
          echo -e "> [!NOTE]\n> The image URL is \`$IMAGE_URL\`" >> $GITHUB_STEP_SUMMARY

      - name: Push to GHCR
        run: skopeo --insecure-policy copy oci-archive:${{ steps.rockcraft.outputs.rock }} docker://${{ steps.image_url.outputs.url }} --dest-creds "canonical:${{ secrets.GITHUB_TOKEN }}"

      - name: Checkout ${{ env.CHARMED_REPO }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHARMED_REPO }}
          path: charmed-repo
          ssh-key: ${{ secrets.CHARMED_CANONICAL_CLA_DEPLOY_PRIVATE_KEY }}

      - name: Update rockcraft.json in ${{ env.CHARMED_REPO }}
        run: |
          cd charmed-repo

          git config user.name "${{ github.actor }}-bot"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          yq e -i '.resources.app-image.upstream-source = "${{ steps.image_url.outputs.url }}"' metadata.yaml
          git add metadata.yaml
          git commit -m "Update Rock image ID: ${{ github.repository }}@${{ github.sha }}"

          git push
